[tox]
name=slurm_monitor
artifacts_dir={toxinidir}/artifacts
min_version = 4.0
env_list = py

[testenv]
extras =
    test
    restapi

allowlist_externals =
    bash
    pytest
    docker
    echo

passenv =
    PYTEST_ARGS

commands =
    pytest --cov={[tox]name} \
           --cov-report=html:{[tox]artifacts_dir}/tests/ \
           --cov-report=term \
           --cov-report=xml:{[tox]artifacts_dir}/tests/cobertura-coverage.xml \
           {toxinidir}/tests/slurm_monitor {env:PYTEST_ARGS:}

[testenv:timescaledb]
extras =
    test
    restapi

allowlist_externals =
    bash
    pytest
    docker

passenv =
    PYTEST_ARGS

commands =
    -bash -c "docker stop $(docker ps -q --filter name=timescaledb-pytest)"
    docker run -d --rm --name timescaledb-pytest -p 7000:5432 -e POSTGRES_DB=test -e POSTGRES_PASSWORD=test -e POSTGRES_USER=test timescale/timescaledb:latest-pg16
    bash -c "sleep 5"
    pytest --cov={[tox]name} \
           --cov-report=html:{[tox]artifacts_dir}/tests/ \
           --cov-report=term \
           --cov-report=xml:{[tox]artifacts_dir}/tests/cobertura-coverage.xml \
           {toxinidir}/tests/slurm_monitor --db-uri timescaledb://test:test@localhost:7000/test {env:PYTEST_ARGS:}
    bash -c "docker stop $(docker ps -q --filter name=timescaledb-pytest)"

[testenv:build]
use_develop=True
deps =
    pyinstaller

allowlist_externals =
    pyinstaller
    bash
    rm

commands =
    bash -c "pyinstaller --onefile --distpath {toxinidir}/dist/$(uname -i) --name slurm-monitor {toxinidir}/src/slurm_monitor/cli/main.py"

[testenv:build-nuitka]
use_develop=True
deps =
    nuitka
    patchelf

allowlist_externals =
    export
    bash
    rm

commands =
    bash -c " \
        export NUITKA_BUILD_ARCH=$(python -c 'import platform; print(platform.machine())'); \
        nuitka --onefile --output-filename=slurm-monitor --output-dir={toxinidir}/dist/$NUITKA_BUILD_ARCH {toxinidir}/src/slurm_monitor/cli/main.py; \
    "
