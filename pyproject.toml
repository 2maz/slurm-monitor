[build-system]
requires = ["setuptools >= 61.0.0",
    "wheel",
    "build",
    "sphinx"]

# https://packaging.python.org/en/latest/specifications/declaring-project-metadata/
[project]
name = "slurm-monitor"
version = "0.1"
description = "Slurm monitor as thin wrapper to slurmrestd"
license = { file="LICENSE" }
readme = "README.md"
keywords = ["slurm", "monitor"]
authors = [
    { name = "Thomas Roehr", email = "roehr@simula.no" }
]
requires-python = ">=3.10"

maintainers = [
    { name = "Thomas Roehr", email = "roehr@simula.no" }
]

classifiers = [
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 3 - Alpha",
    "Operating System :: OS Independent",
    "Programming Lanugage :: Python :: 3.10",
    "License :: OSI Approved :: BSD License",
]

dependencies = [
    "kafka-python-ng",
    "numpy",
    "pandas",
    "psutil",
    "pydantic",
    "pydantic-settings",
    "pyyaml",
    "psycopg2-binary",
    "sqlalchemy",
    "sqlalchemy-timescaledb",
    "tqdm",
]

[project.urls]
homepage = "https://github.com/simula/slurm-monitor"
documentation = "https://gitlab.com/simula/slurm-monitor"
repository = "https://gitlab.com/simula/slurm-monitor"

#[project.entry-points]

[project.optional-dependencies]
restapi = [
    "fastapi",
    "fastapi-cache2[memcache]",
    "prometheus-fastapi-instrumentator",
    "uvicorn",
]

dev = [
    "isort",
    "jupyter-book",
    "pre-commit",
    "ruff",
    "sphinx-autoapi",
    "tox"
]
test = [
    "coverage",
    "httpx",
    "pytest",
    "pytest-asyncio",
    "pytest-cov",
    "pytest-mock",
    "pydot",
]

[project.scripts]
slurm-monitor = "slurm_monitor.cli.main:run"
slurm-monitor-collector = "slurm_monitor.db.v0.data_collector:cli_run"

slurm-monitor-probe = "slurm_monitor.db.v1.data_publisher:cli_run"
slurm-monitor-db_subscriber = "slurm_monitor.db.v1.data_subscriber:cli_run"

slurm-monitor-migrate = "slurm_monitor.db.migrate:cli_run"

[tool.mypy]
ignore_missing_imports = true

[tool.setuptools]
    script-files = [
        "bin/slurm-monitor-probes-ctl",
        "bin/slurm-monitor-ctl"
    ]

[tool.coverage.run]
source = ["src"]

[tool.ruff]
line-length = 120

[tool.isort]
multi_line_output = 8

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "function"
